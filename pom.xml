<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-ext-parent</artifactId>
    <version>38</version>
  </parent>

  <artifactId>vertx-sync</artifactId>
  <name>vertx-sync (DEPRECATED)</name>
  <version>4.3.5-SNAPSHOT</version>

  <properties>
    <stack.version>4.3.5-SNAPSHOT</stack.version>

    <quasar-core.version>0.7.10</quasar-core.version>
    <quasar-maven-plugin.version>0.7.9</quasar-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-dependencies</artifactId>
        <version>${stack.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <!-- proxy vertx -->
      <!-- =======  TODO ====== -->
      <!-- TODO: WARNING :      -->
      <!--  -->
      <!-- 1ER ISSUE: with vertx-codegen and vertx-service-proxy 3.6.0-SNAPSHOT, no class is generated -->
      <!-- Work around: we force to use vertx-codegen and vertx-service-proxy 3.5.4 -->
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-codegen</artifactId>
        <version>3.5.4</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-service-proxy</artifactId>
        <version>3.5.4</version>
        <classifier>processor</classifier>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>co.paralleluniverse</groupId>
      <artifactId>quasar-core</artifactId>
      <version>${quasar-core.version}</version>
      <classifier>jdk8</classifier>
      <exclusions>
        <exclusion>
          <groupId>io.dropwizard.metrics</groupId>
          <artifactId>metrics-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.latencyutils</groupId>
          <artifactId>LatencyUtils</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.hdrhistogram</groupId>
          <artifactId>HdrHistogram</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Force to 30.1.1-jre as that's the stack version -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>30.1.1-jre</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    
    
    
    <dependency>
		<groupId>io.vertx</groupId>
		<artifactId>vertx-mongo-client</artifactId>
		<scope>test</scope>
	</dependency>
	<!-- mongo in memory -->
	<dependency>
		<groupId>de.bwaldvogel</groupId>
		<artifactId>mongo-java-server</artifactId>
		<version>1.8.0</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>de.bwaldvogel</groupId>
		<artifactId>mongo-java-server-memory-backend</artifactId>
		<version>1.8.0</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>3.11.1</version>
		<scope>test</scope>
	</dependency>
	
	<!-- proxy vertx -->
	<dependency>
	  <groupId>io.vertx</groupId>
	  <artifactId>vertx-codegen</artifactId>
	  <scope>provided</scope>
	</dependency>
	<dependency>
	  <groupId>io.vertx</groupId>
	  <artifactId>vertx-service-proxy</artifactId>
	  <classifier>processor</classifier>
	</dependency>
    
    
  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <!-- Collecting classpath entries as properties in the form groupId:artifactId:type:[classifier]
             as per http://maven.apache.org/plugins/maven-dependency-plugin/properties-mojo.html -->
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
          <executions>
            <execution>
              <id>getClasspathFilenames</id>
              <goals>
                <goal>properties</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

		<!--This plugin's configuration is used to store Eclipse m2e settings 
		only. It has no influence on the Maven build itself. -->
		<plugin>
			<groupId>org.eclipse.m2e</groupId>
			<artifactId>lifecycle-mapping</artifactId>
			<version>1.0.0</version>
			<configuration>
				<lifecycleMappingMetadata>
					<pluginExecutions>
						<pluginExecution>
							<pluginExecutionFilter>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>buildhelper-maven-plugin</artifactId>
								<versionRange>[1.8,)</versionRange>
								<goals>
									<goal>add-test-source</goal>
								</goals>
							</pluginExecutionFilter>
							<action>
								<execute />
							</action>
						</pluginExecution>
						<pluginExecution>
							<pluginExecutionFilter>
								<groupId>com.vlkan</groupId>
								<artifactId>quasar-maven-plugin</artifactId>
								<versionRange>[0.7.9,)</versionRange>
								<goals>
									<goal>instrument</goal>
								</goals>
							</pluginExecutionFilter>
							<action>
								<ignore />
							</action>
						</pluginExecution>
						<pluginExecution>
							<pluginExecutionFilter>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-dependency-plugin</artifactId>
								<versionRange>[2.10,)</versionRange>
								<goals>
									<goal>copy</goal>
									<goal>properties</goal>
								</goals>
							</pluginExecutionFilter>
							<action>
								<execute />
							</action>
						</pluginExecution>
					</pluginExecutions>
				</lifecycleMappingMetadata>
			</configuration>
		</plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.vlkan</groupId>
        <artifactId>quasar-maven-plugin</artifactId>
        <version>${quasar-maven-plugin.version}</version>
        <configuration>
          <check>true</check>
          <debug>true</debug>
          <verbose>true</verbose>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!--
          override the internal dependency to use the same quasar version as the one used by vert.x sync, it
          works until they change the API.
          -->
          <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-core</artifactId>
            <version>${quasar-core.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Collecting classpath entries as properties in the form groupId:artifactId:type:[classifier]
           as per http://maven.apache.org/plugins/maven-dependency-plugin/properties-mojo.html -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>getClasspathFilenames</id>
            <goals>
              <goal>properties</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>

          <!--<systemPropertyVariables>-->
          <!--<co.paralleluniverse.fibers.verifyInstrumentation>true</co.paralleluniverse.fibers.verifyInstrumentation>-->
          <!--</systemPropertyVariables>-->
          <!--<argLine>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argLine>-->

          <!-- Enable if using compile-time (AoT) instrumentation -->
          <!-- argLine>-Dco.paralleluniverse.fibers.disableAgentWarning</argLine -->

          <!-- Quasar Agent for JDK 7 -->
          <argLine>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}</argLine>
          <!--<forkCount>1</forkCount>-->
          <!--<reuseForks>true</reuseForks>-->
        </configuration>
      </plugin>
      
      <plugin>
		<groupId>org.codehaus.mojo</groupId>
		  <artifactId>build-helper-maven-plugin</artifactId>
		  <executions>
		     <execution>
		        <id>add-test-source</id>
		        <phase>generate-test-sources</phase>
		        <goals>
		           <goal>add-test-source</goal>
		        </goals>
		        <configuration>
		          <sources>
		            <source>${project.build.directory}/generated-test-sources/tests-annotations/</source>
		          </sources>
		        </configuration>
		     </execution>
		  </executions>
      </plugin>
    </plugins>
  </build>
</project>
